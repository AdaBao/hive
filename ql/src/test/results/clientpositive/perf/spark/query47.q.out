PREHOOK: query: explain
 with v1 as(
 select i_category, i_brand,
        s_store_name, s_company_name,
        d_year, d_moy,
        sum(ss_sales_price) sum_sales,
        avg(sum(ss_sales_price)) over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name
           order by d_year, d_moy) rn
 from item, store_sales, date_dim, store
 where ss_item_sk = i_item_sk and
       ss_sold_date_sk = d_date_sk and
       ss_store_sk = s_store_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          s_store_name, s_company_name,
          d_year, d_moy),
 v2 as(
 select v1.i_category
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1.s_store_name = v1_lag.s_store_name and
       v1.s_store_name = v1_lead.s_store_name and
       v1.s_company_name = v1_lag.s_company_name and
       v1.s_company_name = v1_lead.s_company_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and    
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, 3
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@item
PREHOOK: Input: default@store
PREHOOK: Input: default@store_sales
#### A masked pattern was here ####
POSTHOOK: query: explain
 with v1 as(
 select i_category, i_brand,
        s_store_name, s_company_name,
        d_year, d_moy,
        sum(ss_sales_price) sum_sales,
        avg(sum(ss_sales_price)) over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name
           order by d_year, d_moy) rn
 from item, store_sales, date_dim, store
 where ss_item_sk = i_item_sk and
       ss_sold_date_sk = d_date_sk and
       ss_store_sk = s_store_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          s_store_name, s_company_name,
          d_year, d_moy),
 v2 as(
 select v1.i_category
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1.s_store_name = v1_lag.s_store_name and
       v1.s_store_name = v1_lead.s_store_name and
       v1.s_company_name = v1_lag.s_company_name and
       v1.s_company_name = v1_lead.s_company_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and    
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, 3
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@item
POSTHOOK: Input: default@store
POSTHOOK: Input: default@store_sales
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-3 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-3
  Stage-1 depends on stages: Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 10 
            Map Operator Tree:
                TableScan
                  alias: store
                  Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: s_store_sk is not null (type: boolean)
                    Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                    Spark HashTable Sink Operator
                      keys:
                        0 _col32 (type: int)
                        1 s_store_sk (type: int)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-3
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 18 
            Map Operator Tree:
                TableScan
                  alias: store
                  Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: s_store_sk is not null (type: boolean)
                    Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                    Spark HashTable Sink Operator
                      keys:
                        0 _col32 (type: int)
                        1 s_store_sk (type: int)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-4
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 26 
            Map Operator Tree:
                TableScan
                  alias: store
                  Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: s_store_sk is not null (type: boolean)
                    Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE
                    Spark HashTable Sink Operator
                      keys:
                        0 _col32 (type: int)
                        1 s_store_sk (type: int)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-1
    Spark
      Edges:
        Reducer 12 <- Map 1 (PARTITION-LEVEL SORT, 403), Map 16 (PARTITION-LEVEL SORT, 403)
        Reducer 13 <- Map 17 (PARTITION-LEVEL SORT, 438), Reducer 12 (PARTITION-LEVEL SORT, 438)
        Reducer 14 <- Reducer 13 (GROUP PARTITION-LEVEL SORT, 67)
        Reducer 21 <- Map 17 (PARTITION-LEVEL SORT, 438), Reducer 12 (PARTITION-LEVEL SORT, 438)
        Reducer 3 <- Map 17 (PARTITION-LEVEL SORT, 438), Reducer 12 (PARTITION-LEVEL SORT, 438)
        Reducer 15 <- Reducer 14 (PARTITION-LEVEL SORT, 34)
        Reducer 22 <- Reducer 21 (GROUP PARTITION-LEVEL SORT, 67)
        Reducer 4 <- Reducer 3 (GROUP PARTITION-LEVEL SORT, 67)
        Reducer 23 <- Reducer 22 (PARTITION-LEVEL SORT, 34)
        Reducer 5 <- Reducer 4 (PARTITION-LEVEL SORT, 34)
        Reducer 6 <- Reducer 15 (PARTITION-LEVEL SORT, 68), Reducer 23 (PARTITION-LEVEL SORT, 68), Reducer 5 (PARTITION-LEVEL SORT, 68)
        Reducer 7 <- Reducer 6 (SORT, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: item
                  Statistics: Num rows: 462000 Data size: 663560457 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: i_item_sk is not null (type: boolean)
                    Statistics: Num rows: 462000 Data size: 663560457 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: i_item_sk (type: int)
                      sort order: +
                      Map-reduce partition columns: i_item_sk (type: int)
                      Statistics: Num rows: 462000 Data size: 663560457 Basic stats: COMPLETE Column stats: NONE
                      value expressions: i_brand (type: string), i_category (type: string)
        Map 16 
            Map Operator Tree:
                TableScan
                  alias: store_sales
                  Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (ss_item_sk is not null and ss_sold_date_sk is not null and ss_store_sk is not null) (type: boolean)
                    Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: ss_item_sk (type: int)
                      sort order: +
                      Map-reduce partition columns: ss_item_sk (type: int)
                      Statistics: Num rows: 575995635 Data size: 50814502088 Basic stats: COMPLETE Column stats: NONE
                      value expressions: ss_sold_date_sk (type: int), ss_store_sk (type: int), ss_sales_price (type: decimal(7,2))
        Map 17 
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (d_date_sk is not null and ((d_year = 2000) or ((d_year = 1999) and (d_moy = 12)) or ((d_year = 2001) and (d_moy = 1)))) (type: boolean)
                    Statistics: Num rows: 73048 Data size: 81740712 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: d_date_sk (type: int)
                      sort order: +
                      Map-reduce partition columns: d_date_sk (type: int)
                      Statistics: Num rows: 73048 Data size: 81740712 Basic stats: COMPLETE Column stats: NONE
                      value expressions: d_year (type: int), d_moy (type: int)
        Reducer 12 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 i_item_sk (type: int)
                  1 ss_item_sk (type: int)
                outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38
                Statistics: Num rows: 633595212 Data size: 55895953508 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col25 (type: int)
                  sort order: +
                  Map-reduce partition columns: _col25 (type: int)
                  Statistics: Num rows: 633595212 Data size: 55895953508 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: int), _col8 (type: string), _col12 (type: string), _col27 (type: int), _col32 (type: int), _col38 (type: decimal(7,2))
        Reducer 13 
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col25 (type: int)
                  1 d_date_sk (type: int)
                outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38, _col51, _col57, _col59
                Statistics: Num rows: 696954748 Data size: 61485550191 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col32 (type: int)
                    1 s_store_sk (type: int)
                  outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38, _col51, _col57, _col59, _col82, _col87, _col99
                  input vertices:
                    1 Map 18
                  Statistics: Num rows: 766650239 Data size: 67634106676 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((_col27 = _col0) and (_col25 = _col51) and (_col32 = _col82)) (type: boolean)
                    Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col8 (type: string), _col12 (type: string), _col38 (type: decimal(7,2)), _col57 (type: int), _col59 (type: int), _col87 (type: string), _col99 (type: string)
                      outputColumnNames: _col8, _col12, _col38, _col57, _col59, _col87, _col99
                      Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: sum(_col38)
                        keys: _col12 (type: string), _col8 (type: string), _col87 (type: string), _col99 (type: string), _col57 (type: int), _col59 (type: int)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                        Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int)
                          sort order: ++++++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int)
                          Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col6 (type: decimal(17,2))
        Reducer 14 
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: int), KEY._col5 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: string, _col1: string, _col2: string, _col3: string, _col4: int, _col5: int, _col6: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col0 ASC NULLS FIRST, _col1 ASC NULLS FIRST, _col2 ASC NULLS FIRST, _col3 ASC NULLS FIRST, _col4 ASC NULLS FIRST
                        partition by: _col0, _col1, _col2, _col3, _col4
                        raw input shape:
                        window functions:
                            window function definition
                              alias: avg_window_0
                              arguments: _col6
                              name: avg
                              window function: GenericUDAFAverageEvaluatorDecimal
                              window frame: PRECEDING(MAX)~FOLLOWING(MAX)
                  Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int), _col6 (type: decimal(17,2))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                    Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int)
                      sort order: ++++++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                      Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col6 (type: decimal(17,2))
        Reducer 15 
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: string), KEY.reducesinkkey4 (type: int), KEY.reducesinkkey5 (type: int), VALUE._col1 (type: decimal(17,2))
                outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col6, _col7
                Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col1: string, _col2: string, _col3: string, _col4: string, _col5: int, _col6: int, _col7: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col5 ASC NULLS FIRST, _col6 ASC NULLS FIRST
                        partition by: _col1, _col2, _col3, _col4
                        raw input shape:
                        window functions:
                            window function definition
                              alias: rank_window_1
                              arguments: _col5, _col6
                              name: rank
                              window function: GenericUDAFRankEvaluator
                              window frame: PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (_col1 is not null and _col2 is not null and _col3 is not null and _col4 is not null and (rank_window_1 + 1) is not null) (type: boolean)
                    Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col7 (type: decimal(17,2)), rank_window_1 (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col6, _col8
                      Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), (_col8 + 1) (type: int)
                        sort order: +++++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), (_col8 + 1) (type: int)
                        Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col6 (type: decimal(17,2)), _col8 (type: int)
        Reducer 21 
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col25 (type: int)
                  1 d_date_sk (type: int)
                outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38, _col51, _col57, _col59
                Statistics: Num rows: 696954748 Data size: 61485550191 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col32 (type: int)
                    1 s_store_sk (type: int)
                  outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38, _col51, _col57, _col59, _col82, _col87, _col99
                  input vertices:
                    1 Map 26
                  Statistics: Num rows: 766650239 Data size: 67634106676 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((_col27 = _col0) and (_col25 = _col51) and (_col32 = _col82)) (type: boolean)
                    Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col8 (type: string), _col12 (type: string), _col38 (type: decimal(7,2)), _col57 (type: int), _col59 (type: int), _col87 (type: string), _col99 (type: string)
                      outputColumnNames: _col8, _col12, _col38, _col57, _col59, _col87, _col99
                      Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: sum(_col38)
                        keys: _col12 (type: string), _col8 (type: string), _col87 (type: string), _col99 (type: string), _col57 (type: int), _col59 (type: int)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                        Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int)
                          sort order: ++++++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int)
                          Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col6 (type: decimal(17,2))
        Reducer 22 
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: int), KEY._col5 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: string, _col1: string, _col2: string, _col3: string, _col4: int, _col5: int, _col6: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col0 ASC NULLS FIRST, _col1 ASC NULLS FIRST, _col2 ASC NULLS FIRST, _col3 ASC NULLS FIRST, _col4 ASC NULLS FIRST
                        partition by: _col0, _col1, _col2, _col3, _col4
                        raw input shape:
                        window functions:
                            window function definition
                              alias: avg_window_0
                              arguments: _col6
                              name: avg
                              window function: GenericUDAFAverageEvaluatorDecimal
                              window frame: PRECEDING(MAX)~FOLLOWING(MAX)
                  Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int), _col6 (type: decimal(17,2))
                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                    Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int)
                      sort order: ++++++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                      Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col6 (type: decimal(17,2))
        Reducer 23 
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: string), KEY.reducesinkkey4 (type: int), KEY.reducesinkkey5 (type: int), VALUE._col1 (type: decimal(17,2))
                outputColumnNames: _col1, _col2, _col3, _col4, _col5, _col6, _col7
                Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col1: string, _col2: string, _col3: string, _col4: string, _col5: int, _col6: int, _col7: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col5 ASC NULLS FIRST, _col6 ASC NULLS FIRST
                        partition by: _col1, _col2, _col3, _col4
                        raw input shape:
                        window functions:
                            window function definition
                              alias: rank_window_1
                              arguments: _col5, _col6
                              name: rank
                              window function: GenericUDAFRankEvaluator
                              window frame: PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (_col1 is not null and _col2 is not null and _col3 is not null and _col4 is not null and (rank_window_1 - 1) is not null) (type: boolean)
                    Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col7 (type: decimal(17,2)), rank_window_1 (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col6, _col8
                      Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), (_col8 - 1) (type: int)
                        sort order: +++++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), (_col8 - 1) (type: int)
                        Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col6 (type: decimal(17,2)), _col8 (type: int)
        Reducer 3 
            Local Work:
              Map Reduce Local Work
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 _col25 (type: int)
                  1 d_date_sk (type: int)
                outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38, _col51, _col57, _col59
                Statistics: Num rows: 696954748 Data size: 61485550191 Basic stats: COMPLETE Column stats: NONE
                Map Join Operator
                  condition map:
                       Inner Join 0 to 1
                  keys:
                    0 _col32 (type: int)
                    1 s_store_sk (type: int)
                  outputColumnNames: _col0, _col8, _col12, _col25, _col27, _col32, _col38, _col51, _col57, _col59, _col82, _col87, _col99
                  input vertices:
                    1 Map 10
                  Statistics: Num rows: 766650239 Data size: 67634106676 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((_col27 = _col0) and (_col25 = _col51) and (_col32 = _col82)) (type: boolean)
                    Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col8 (type: string), _col12 (type: string), _col38 (type: decimal(7,2)), _col57 (type: int), _col59 (type: int), _col87 (type: string), _col99 (type: string)
                      outputColumnNames: _col8, _col12, _col38, _col57, _col59, _col87, _col99
                      Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: sum(_col38)
                        keys: _col12 (type: string), _col8 (type: string), _col87 (type: string), _col99 (type: string), _col57 (type: int), _col59 (type: int)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                        Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int)
                          sort order: ++++++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int)
                          Statistics: Num rows: 95831279 Data size: 8454263257 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col6 (type: decimal(17,2))
        Reducer 4 
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: int), KEY._col5 (type: int)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: string, _col1: string, _col2: string, _col3: string, _col4: int, _col5: int, _col6: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col0 ASC NULLS FIRST, _col1 ASC NULLS FIRST, _col2 ASC NULLS FIRST, _col3 ASC NULLS FIRST, _col4 ASC NULLS FIRST
                        partition by: _col0, _col1, _col2, _col3, _col4
                        raw input shape:
                        window functions:
                            window function definition
                              alias: avg_window_0
                              arguments: _col6
                              name: avg
                              window function: GenericUDAFAverageEvaluatorDecimal
                              window frame: PRECEDING(MAX)~FOLLOWING(MAX)
                  Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: avg_window_0 (type: decimal(21,6)), _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int), _col6 (type: decimal(17,2))
                    outputColumnNames: avg_window_0, _col0, _col1, _col2, _col3, _col4, _col5, _col6
                    Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: int), _col5 (type: int)
                      sort order: ++++++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string)
                      Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                      value expressions: avg_window_0 (type: decimal(21,6)), _col6 (type: decimal(17,2))
        Reducer 5 
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: decimal(21,6)), KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), KEY.reducesinkkey2 (type: string), KEY.reducesinkkey3 (type: string), KEY.reducesinkkey4 (type: int), KEY.reducesinkkey5 (type: int), VALUE._col1 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                PTF Operator
                  Function definitions:
                      Input definition
                        input alias: ptf_0
                        output shape: _col0: decimal(21,6), _col1: string, _col2: string, _col3: string, _col4: string, _col5: int, _col6: int, _col7: decimal(17,2)
                        type: WINDOWING
                      Windowing table definition
                        input alias: ptf_1
                        name: windowingtablefunction
                        order by: _col5 ASC NULLS FIRST, _col6 ASC NULLS FIRST
                        partition by: _col1, _col2, _col3, _col4
                        raw input shape:
                        window functions:
                            window function definition
                              alias: rank_window_1
                              arguments: _col5, _col6
                              name: rank
                              window function: GenericUDAFRankEvaluator
                              window frame: PRECEDING(MAX)~FOLLOWING(MAX)
                              isPivotResult: true
                  Statistics: Num rows: 47915639 Data size: 4227131584 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (_col1 is not null and _col2 is not null and _col3 is not null and _col4 is not null and rank_window_1 is not null and (_col5 = 2000) and (_col0 > 0) and (CASE WHEN ((_col0 > 0)) THEN ((abs((_col7 - _col0)) / _col0)) ELSE (null) END > 0.1)) (type: boolean)
                    Statistics: Num rows: 2661979 Data size: 234840560 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col6 (type: int), _col7 (type: decimal(17,2)), _col0 (type: decimal(21,6)), rank_window_1 (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3, _col5, _col6, _col7, _col8
                      Statistics: Num rows: 2661979 Data size: 234840560 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col8 (type: int)
                        sort order: +++++
                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col8 (type: int)
                        Statistics: Num rows: 2661979 Data size: 234840560 Basic stats: COMPLETE Column stats: NONE
                        value expressions: _col5 (type: int), _col6 (type: decimal(17,2)), _col7 (type: decimal(21,6))
        Reducer 6 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                     Inner Join 0 to 2
                keys:
                  0 _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), _col8 (type: int)
                  1 _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), (_col8 + 1) (type: int)
                  2 _col0 (type: string), _col1 (type: string), _col2 (type: string), _col3 (type: string), (_col8 - 1) (type: int)
                outputColumnNames: _col0, _col1, _col2, _col3, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col15, _col17, _col18, _col19, _col20, _col21, _col24, _col26
                Statistics: Num rows: 105414408 Data size: 9299689686 Basic stats: COMPLETE Column stats: NONE
                Filter Operator
                  predicate: ((_col0 = _col9) and (_col0 = _col18) and (_col1 = _col10) and (_col1 = _col19) and (_col2 = _col11) and (_col2 = _col20) and (_col3 = _col12) and (_col3 = _col21) and (_col8 = (_col17 + 1)) and (_col8 = (_col26 - 1))) (type: boolean)
                  Statistics: Num rows: 102943 Data size: 9081661 Basic stats: COMPLETE Column stats: NONE
                  Select Operator
                    expressions: _col0 (type: string), _col5 (type: int), _col7 (type: decimal(21,6)), _col6 (type: decimal(17,2)), _col15 (type: decimal(17,2)), _col24 (type: decimal(17,2))
                    outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6
                    Statistics: Num rows: 102943 Data size: 9081661 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: (_col4 - _col3) (type: decimal(22,6))
                      sort order: +
                      Statistics: Num rows: 102943 Data size: 9081661 Basic stats: COMPLETE Column stats: NONE
                      TopN Hash Memory Usage: 0.1
                      value expressions: _col0 (type: string), _col2 (type: int), _col3 (type: decimal(21,6)), _col4 (type: decimal(17,2)), _col5 (type: decimal(17,2)), _col6 (type: decimal(17,2))
        Reducer 7 
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: string), 2000 (type: int), VALUE._col2 (type: int), VALUE._col3 (type: decimal(21,6)), VALUE._col4 (type: decimal(17,2)), VALUE._col5 (type: decimal(17,2)), VALUE._col6 (type: decimal(17,2))
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6
                Statistics: Num rows: 102943 Data size: 9081661 Basic stats: COMPLETE Column stats: NONE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 8800 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 8800 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink

