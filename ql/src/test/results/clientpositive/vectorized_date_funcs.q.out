PREHOOK: query: CREATE TABLE date_udf_flight (
  origin_city_name STRING,
  dest_city_name STRING,
  fl_date DATE,
  arr_delay FLOAT,
  fl_num INT
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@date_udf_flight
POSTHOOK: query: CREATE TABLE date_udf_flight (
  origin_city_name STRING,
  dest_city_name STRING,
  fl_date DATE,
  arr_delay FLOAT,
  fl_num INT
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@date_udf_flight
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/flights_tiny.txt.1' OVERWRITE INTO TABLE date_udf_flight
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@date_udf_flight
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/flights_tiny.txt.1' OVERWRITE INTO TABLE date_udf_flight
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@date_udf_flight
PREHOOK: query: CREATE TABLE date_udf_flight_orc (
  fl_date DATE,
  fl_time TIMESTAMP
) STORED AS ORC
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@date_udf_flight_orc
POSTHOOK: query: CREATE TABLE date_udf_flight_orc (
  fl_date DATE,
  fl_time TIMESTAMP
) STORED AS ORC
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@date_udf_flight_orc
PREHOOK: query: INSERT INTO TABLE date_udf_flight_orc SELECT fl_date, to_utc_timestamp(fl_date, 'America/Los_Angeles') FROM date_udf_flight
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight
PREHOOK: Output: default@date_udf_flight_orc
POSTHOOK: query: INSERT INTO TABLE date_udf_flight_orc SELECT fl_date, to_utc_timestamp(fl_date, 'America/Los_Angeles') FROM date_udf_flight
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight
POSTHOOK: Output: default@date_udf_flight_orc
POSTHOOK: Lineage: date_udf_flight_orc.fl_date SIMPLE [(date_udf_flight)date_udf_flight.FieldSchema(name:fl_date, type:date, comment:null), ]
POSTHOOK: Lineage: date_udf_flight_orc.fl_time EXPRESSION [(date_udf_flight)date_udf_flight.FieldSchema(name:fl_date, type:date, comment:null), ]
fl_date	c1
PREHOOK: query: SELECT * FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT * FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
date_udf_flight_orc.fl_date	date_udf_flight_orc.fl_time
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-20	2010-10-20 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-21	2010-10-21 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-22	2010-10-22 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-23	2010-10-23 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-24	2010-10-24 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-25	2010-10-25 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-26	2010-10-26 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-27	2010-10-27 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-28	2010-10-28 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-29	2010-10-29 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-30	2010-10-30 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
2010-10-31	2010-10-31 07:00:00
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: date_udf_flight_orc
            Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0, 1]
            Select Operator
              expressions: fl_time (type: timestamp), to_unix_timestamp(fl_time) (type: bigint), year(fl_time) (type: int), month(fl_time) (type: int), day(fl_time) (type: int), dayofmonth(fl_time) (type: int), dayofweek(fl_time) (type: int), weekofyear(fl_time) (type: int), CAST( fl_time AS DATE) (type: date), to_date(fl_time) (type: date), date_add(fl_time, 2) (type: date), date_sub(fl_time, 2) (type: date), datediff(fl_time, '2000-01-01') (type: int), datediff(fl_time, 2000-01-01) (type: int), datediff(fl_time, 2000-01-01 00:00:00.0) (type: int), datediff(fl_time, 2000-01-01 11:13:09.0) (type: int), datediff(fl_time, '2007-03-14') (type: int), datediff(fl_time, 2007-03-14) (type: int), datediff(fl_time, 2007-03-14 00:00:00.0) (type: int), datediff(fl_time, 2007-03-14 08:21:59.0) (type: int)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
                  selectExpressions: VectorUDFUnixTimeStampTimestamp(col 1) -> 2:bigint, VectorUDFYearTimestamp(col 1, field YEAR) -> 3:int, VectorUDFMonthTimestamp(col 1, field MONTH) -> 4:int, VectorUDFDayOfMonthTimestamp(col 1, field DAY_OF_MONTH) -> 5:int, VectorUDFDayOfMonthTimestamp(col 1, field DAY_OF_MONTH) -> 6:int, VectorUDFDayOfWeekTimestamp(col 1, field DAY_OF_WEEK) -> 7:int, VectorUDFWeekOfYearTimestamp(col 1, field WEEK_OF_YEAR) -> 8:int, CastTimestampToDate(col 1) -> 9:date, VectorUDFDateTimestamp(col 1) -> 10:date, VectorUDFDateAddColScalar(col 1, val 2) -> 11:date, VectorUDFDateSubColScalar(col 1, val 2) -> 12:date, VectorUDFDateDiffColScalar(col 1, val 2000-01-01) -> 13:int, VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 1, val NULL) -> 15:int, VectorUDFDateDiffColScalar(col 1, val NULL) -> 16:int, VectorUDFDateDiffColScalar(col 1, val 2007-03-14) -> 17:int, VectorUDFDateDiffColScalar(col 1, val NULL) -> 18:int, VectorUDFDateDiffColScalar(col 1, val NULL) -> 19:int, VectorUDFDateDiffColScalar(col 1, val NULL) -> 20:int
              Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  fl_time,
  to_unix_timestamp(fl_time),
  year(fl_time),
  month(fl_time),
  day(fl_time),
  dayofmonth(fl_time),
  dayofweek(fl_time),
  weekofyear(fl_time),
  date(fl_time),
  to_date(fl_time),
  date_add(fl_time, 2),
  date_sub(fl_time, 2),
  datediff(fl_time, "2000-01-01"),
  datediff(fl_time, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14"),
  datediff(fl_time, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_time	c1	c2	c3	c4	c5	c6	c7	c8	c9	c10	c11	c12	c13	c14	c15	c16	c17	c18	c19
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20 07:00:00	1287583200	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21 07:00:00	1287669600	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22 07:00:00	1287756000	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23 07:00:00	1287842400	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24 07:00:00	1287928800	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25 07:00:00	1288015200	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26 07:00:00	1288101600	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27 07:00:00	1288188000	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28 07:00:00	1288274400	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29 07:00:00	1288360800	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30 07:00:00	1288447200	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31 07:00:00	1288533600	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: date_udf_flight_orc
            Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0, 1]
            Select Operator
              expressions: fl_date (type: date), to_unix_timestamp(fl_date) (type: bigint), year(fl_date) (type: int), month(fl_date) (type: int), day(fl_date) (type: int), dayofmonth(fl_date) (type: int), dayofweek(fl_date) (type: int), weekofyear(fl_date) (type: int), fl_date (type: date), to_date(fl_date) (type: date), date_add(fl_date, 2) (type: date), date_sub(fl_date, 2) (type: date), datediff(fl_date, '2000-01-01') (type: int), datediff(fl_date, 2000-01-01) (type: int), datediff(fl_date, 2000-01-01 00:00:00.0) (type: int), datediff(fl_date, 2000-01-01 11:13:09.0) (type: int), datediff(fl_date, '2007-03-14') (type: int), datediff(fl_date, 2007-03-14) (type: int), datediff(fl_date, 2007-03-14 00:00:00.0) (type: int), datediff(fl_date, 2007-03-14 08:21:59.0) (type: int)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumns: [0, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
                  selectExpressions: VectorUDFUnixTimeStampDate(col 0) -> 2:bigint, VectorUDFYearDate(col 0, field YEAR) -> 3:int, VectorUDFMonthDate(col 0, field MONTH) -> 4:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 5:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 6:int, VectorUDFDayOfWeekDate(col 0, field DAY_OF_WEEK) -> 7:int, VectorUDFWeekOfYearDate(col 0, field WEEK_OF_YEAR) -> 8:int, VectorUDFDateLong(col 0) -> 9:date, VectorUDFDateAddColScalar(col 0, val 2) -> 10:date, VectorUDFDateSubColScalar(col 0, val 2) -> 11:date, VectorUDFDateDiffColScalar(col 0, val 2000-01-01) -> 12:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 13:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int, VectorUDFDateDiffColScalar(col 0, val 2007-03-14) -> 16:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 17:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 18:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 19:int
              Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  fl_date,
  to_unix_timestamp(fl_date),
  year(fl_date),
  month(fl_date),
  day(fl_date),
  dayofmonth(fl_date),
  dayofweek(fl_date),
  weekofyear(fl_date),
  date(fl_date),
  to_date(fl_date),
  date_add(fl_date, 2),
  date_sub(fl_date, 2),
  datediff(fl_date, "2000-01-01"),
  datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_date, "2007-03-14"),
  datediff(fl_date, date "2007-03-14"),
  datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_date, timestamp "2007-03-14 08:21:59")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_date	c1	c2	c3	c4	c5	c6	c7	c8	c9	c10	c11	c12	c13	c14	c15	c16	c17	c18	c19
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-20	1287558000	2010	10	20	20	4	42	2010-10-20	2010-10-20	2010-10-22	2010-10-18	3945	3945	3945	3945	1316	1316	1316	1316
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-21	1287644400	2010	10	21	21	5	42	2010-10-21	2010-10-21	2010-10-23	2010-10-19	3946	3946	3946	3946	1317	1317	1317	1317
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-22	1287730800	2010	10	22	22	6	42	2010-10-22	2010-10-22	2010-10-24	2010-10-20	3947	3947	3947	3947	1318	1318	1318	1318
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-23	1287817200	2010	10	23	23	7	42	2010-10-23	2010-10-23	2010-10-25	2010-10-21	3948	3948	3948	3948	1319	1319	1319	1319
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-24	1287903600	2010	10	24	24	1	42	2010-10-24	2010-10-24	2010-10-26	2010-10-22	3949	3949	3949	3949	1320	1320	1320	1320
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-25	1287990000	2010	10	25	25	2	43	2010-10-25	2010-10-25	2010-10-27	2010-10-23	3950	3950	3950	3950	1321	1321	1321	1321
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-26	1288076400	2010	10	26	26	3	43	2010-10-26	2010-10-26	2010-10-28	2010-10-24	3951	3951	3951	3951	1322	1322	1322	1322
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-27	1288162800	2010	10	27	27	4	43	2010-10-27	2010-10-27	2010-10-29	2010-10-25	3952	3952	3952	3952	1323	1323	1323	1323
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-28	1288249200	2010	10	28	28	5	43	2010-10-28	2010-10-28	2010-10-30	2010-10-26	3953	3953	3953	3953	1324	1324	1324	1324
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-29	1288335600	2010	10	29	29	6	43	2010-10-29	2010-10-29	2010-10-31	2010-10-27	3954	3954	3954	3954	1325	1325	1325	1325
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-30	1288422000	2010	10	30	30	7	43	2010-10-30	2010-10-30	2010-11-01	2010-10-28	3955	3955	3955	3955	1326	1326	1326	1326
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
2010-10-31	1288508400	2010	10	31	31	1	43	2010-10-31	2010-10-31	2010-11-02	2010-10-29	3956	3956	3956	3956	1327	1327	1327	1327
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: date_udf_flight_orc
            Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0, 1]
            Select Operator
              expressions: fl_time (type: timestamp), fl_date (type: date), (year(fl_time) = year(fl_date)) (type: boolean), (month(fl_time) = month(fl_date)) (type: boolean), (day(fl_time) = day(fl_date)) (type: boolean), (dayofmonth(fl_time) = dayofmonth(fl_date)) (type: boolean), (dayofweek(fl_time) = dayofweek(fl_date)) (type: boolean), (weekofyear(fl_time) = weekofyear(fl_date)) (type: boolean), (CAST( fl_time AS DATE) = fl_date) (type: boolean), (to_date(fl_time) = to_date(fl_date)) (type: boolean), (date_add(fl_time, 2) = date_add(fl_date, 2)) (type: boolean), (date_sub(fl_time, 2) = date_sub(fl_date, 2)) (type: boolean), (datediff(fl_time, '2000-01-01') = datediff(fl_date, '2000-01-01')) (type: boolean), (datediff(fl_time, 2000-01-01) = datediff(fl_date, 2000-01-01)) (type: boolean), (datediff(fl_time, 2000-01-01 00:00:00.0) = datediff(fl_date, 2000-01-01 00:00:00.0)) (type: boolean), (datediff(fl_time, 2000-01-01 11:13:09.0) = datediff(fl_date, 2000-01-01 11:13:09.0)) (type: boolean), (datediff(fl_time, '2007-03-14') = datediff(fl_date, '2007-03-14')) (type: boolean), (datediff(fl_time, 2007-03-14) = datediff(fl_date, 2007-03-14)) (type: boolean), (datediff(fl_time, 2007-03-14 00:00:00.0) = datediff(fl_date, 2007-03-14 00:00:00.0)) (type: boolean), (datediff(fl_time, 2007-03-14 08:21:59.0) = datediff(fl_date, 2007-03-14 08:21:59.0)) (type: boolean), (datediff(fl_date, '2000-01-01') = datediff(fl_date, 2000-01-01)) (type: boolean), (datediff(fl_date, '2007-03-14') = datediff(fl_date, 2007-03-14)) (type: boolean)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20, _col21
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumns: [1, 0, 4, 5, 6, 7, 8, 9, 2, 3, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
                  selectExpressions: LongColEqualLongColumn(col 2, col 3)(children: VectorUDFYearTimestamp(col 1, field YEAR) -> 2:int, VectorUDFYearDate(col 0, field YEAR) -> 3:int) -> 4:boolean, LongColEqualLongColumn(col 2, col 3)(children: VectorUDFMonthTimestamp(col 1, field MONTH) -> 2:int, VectorUDFMonthDate(col 0, field MONTH) -> 3:int) -> 5:boolean, LongColEqualLongColumn(col 2, col 3)(children: VectorUDFDayOfMonthTimestamp(col 1, field DAY_OF_MONTH) -> 2:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 3:int) -> 6:boolean, LongColEqualLongColumn(col 2, col 3)(children: VectorUDFDayOfMonthTimestamp(col 1, field DAY_OF_MONTH) -> 2:int, VectorUDFDayOfMonthDate(col 0, field DAY_OF_MONTH) -> 3:int) -> 7:boolean, LongColEqualLongColumn(col 2, col 3)(children: VectorUDFDayOfWeekTimestamp(col 1, field DAY_OF_WEEK) -> 2:int, VectorUDFDayOfWeekDate(col 0, field DAY_OF_WEEK) -> 3:int) -> 8:boolean, LongColEqualLongColumn(col 2, col 3)(children: VectorUDFWeekOfYearTimestamp(col 1, field WEEK_OF_YEAR) -> 2:int, VectorUDFWeekOfYearDate(col 0, field WEEK_OF_YEAR) -> 3:int) -> 9:boolean, LongColEqualLongColumn(col 10, col 0)(children: CastTimestampToDate(col 1) -> 10:date) -> 2:boolean, LongColEqualLongColumn(col 10, col 11)(children: VectorUDFDateTimestamp(col 1) -> 10:date, VectorUDFDateLong(col 0) -> 11:date) -> 3:boolean, LongColEqualLongColumn(col 10, col 11)(children: VectorUDFDateAddColScalar(col 1, val 2) -> 10:date, VectorUDFDateAddColScalar(col 0, val 2) -> 11:date) -> 12:boolean, LongColEqualLongColumn(col 10, col 11)(children: VectorUDFDateSubColScalar(col 1, val 2) -> 10:date, VectorUDFDateSubColScalar(col 0, val 2) -> 11:date) -> 13:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val 2000-01-01) -> 14:int, VectorUDFDateDiffColScalar(col 0, val 2000-01-01) -> 15:int) -> 16:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 17:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 18:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 19:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val 2007-03-14) -> 14:int, VectorUDFDateDiffColScalar(col 0, val 2007-03-14) -> 15:int) -> 20:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 21:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 22:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 1, val NULL) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 23:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 0, val 2000-01-01) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 24:boolean, LongColEqualLongColumn(col 14, col 15)(children: VectorUDFDateDiffColScalar(col 0, val 2007-03-14) -> 14:int, VectorUDFDateDiffColScalar(col 0, val NULL) -> 15:int) -> 25:boolean
              Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                File Sink Vectorization:
                    className: VectorFileSinkOperator
                    native: false
                Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  fl_time,
  fl_date,
  year(fl_time) = year(fl_date),
  month(fl_time) = month(fl_date),
  day(fl_time) = day(fl_date),
  dayofmonth(fl_time) = dayofmonth(fl_date),
  dayofweek(fl_time) = dayofweek(fl_date),
  weekofyear(fl_time) = weekofyear(fl_date),
  date(fl_time) = date(fl_date),
  to_date(fl_time) = to_date(fl_date),
  date_add(fl_time, 2) = date_add(fl_date, 2),
  date_sub(fl_time, 2) = date_sub(fl_date, 2),
  datediff(fl_time, "2000-01-01") = datediff(fl_date, "2000-01-01"),
  datediff(fl_time, date "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_time, timestamp "2000-01-01 00:00:00") = datediff(fl_date, timestamp "2000-01-01 00:00:00"),
  datediff(fl_time, timestamp "2000-01-01 11:13:09") = datediff(fl_date, timestamp "2000-01-01 11:13:09"),
  datediff(fl_time, "2007-03-14") = datediff(fl_date, "2007-03-14"),
  datediff(fl_time, date "2007-03-14") = datediff(fl_date, date "2007-03-14"),
  datediff(fl_time, timestamp "2007-03-14 00:00:00") = datediff(fl_date, timestamp "2007-03-14 00:00:00"),
  datediff(fl_time, timestamp "2007-03-14 08:21:59") = datediff(fl_date, timestamp "2007-03-14 08:21:59"),
  datediff(fl_date, "2000-01-01") = datediff(fl_date, date "2000-01-01"),
  datediff(fl_date, "2007-03-14") = datediff(fl_date, date "2007-03-14")
FROM date_udf_flight_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_time	fl_date	c2	c3	c4	c5	c6	c7	c8	c9	c10	c11	c12	c13	c14	c15	c16	c17	c18	c19	c20	c21
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-20 07:00:00	2010-10-20	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-21 07:00:00	2010-10-21	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-22 07:00:00	2010-10-22	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-23 07:00:00	2010-10-23	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-24 07:00:00	2010-10-24	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-25 07:00:00	2010-10-25	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-26 07:00:00	2010-10-26	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-27 07:00:00	2010-10-27	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-28 07:00:00	2010-10-28	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-29 07:00:00	2010-10-29	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-30 07:00:00	2010-10-30	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
2010-10-31 07:00:00	2010-10-31	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true	true
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: date_udf_flight_orc
            Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0, 1]
            Select Operator
              expressions: fl_date (type: date), to_date(date_add(fl_date, 2)) (type: date), to_date(date_sub(fl_date, 2)) (type: date), datediff(fl_date, date_add(fl_date, 2)) (type: int), datediff(fl_date, date_sub(fl_date, 2)) (type: int), datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) (type: int)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumns: [0, 3, 4, 5, 6, 8]
                  selectExpressions: VectorUDFDateLong(col 2)(children: VectorUDFDateAddColScalar(col 0, val 2) -> 2:date) -> 3:date, VectorUDFDateLong(col 2)(children: VectorUDFDateSubColScalar(col 0, val 2) -> 2:date) -> 4:date, VectorUDFDateDiffColCol(col 0, col 2)(children: VectorUDFDateAddColScalar(col 0, val 2) -> 2:date) -> 5:int, VectorUDFDateDiffColCol(col 0, col 2)(children: VectorUDFDateSubColScalar(col 0, val 2) -> 2:date) -> 6:int, VectorUDFDateDiffColCol(col 2, col 7)(children: VectorUDFDateAddColScalar(col 0, val 2) -> 2:date, VectorUDFDateSubColScalar(col 0, val 2) -> 7:date) -> 8:int
              Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
              Limit
                Number of rows: 10
                Limit Vectorization:
                    className: VectorLimitOperator
                    native: true
                Statistics: Num rows: 10 Data size: 960 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  File Sink Vectorization:
                      className: VectorFileSinkOperator
                      native: false
                  Statistics: Num rows: 10 Data size: 960 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true

  Stage: Stage-0
    Fetch Operator
      limit: 10
      Processor Tree:
        ListSink

PREHOOK: query: SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT 
  fl_date, 
  to_date(date_add(fl_date, 2)), 
  to_date(date_sub(fl_date, 2)),
  datediff(fl_date, date_add(fl_date, 2)), 
  datediff(fl_date, date_sub(fl_date, 2)),
  datediff(date_add(fl_date, 2), date_sub(fl_date, 2)) 
FROM date_udf_flight_orc LIMIT 10
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
fl_date	c1	c2	c3	c4	c5
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-20	2010-10-22	2010-10-18	-2	2	4
2010-10-21	2010-10-23	2010-10-19	-2	2	4
2010-10-21	2010-10-23	2010-10-19	-2	2	4
PREHOOK: query: SELECT to_date('2009-07-30 04:17:52') FROM date_udf_flight_orc LIMIT 1
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT to_date('2009-07-30 04:17:52') FROM date_udf_flight_orc LIMIT 1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
c0
2009-07-30
PREHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION EXPRESSION  SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
Explain
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: date_udf_flight_orc
            Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
            TableScan Vectorization:
                native: true
                projectedOutputColumns: [0, 1]
            Select Operator
              expressions: fl_date (type: date)
              outputColumnNames: fl_date
              Select Vectorization:
                  className: VectorSelectOperator
                  native: true
                  projectedOutputColumns: [0]
              Statistics: Num rows: 137 Data size: 13152 Basic stats: COMPLETE Column stats: NONE
              Group By Operator
                aggregations: min(fl_date), max(fl_date), count(fl_date), count()
                Group By Vectorization:
                    aggregators: VectorUDAFMinLong(col 0) -> date, VectorUDAFMaxLong(col 0) -> date, VectorUDAFCount(col 0) -> bigint, VectorUDAFCountStar(*) -> bigint
                    className: VectorGroupByOperator
                    vectorOutput: true
                    native: false
                    projectedOutputColumns: [0, 1, 2, 3]
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3
                Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  sort order: 
                  Reduce Sink Vectorization:
                      className: VectorReduceSinkOperator
                      native: false
                      nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, Not ACID UPDATE or DELETE IS true, No buckets IS true, No TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
                      nativeConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false, Uniform Hash IS false
                  Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: date), _col1 (type: date), _col2 (type: bigint), _col3 (type: bigint)
      Execution mode: vectorized
      Map Vectorization:
          enabled: true
          enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
          groupByVectorOutput: true
          inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
          allNative: false
          usesVectorUDFAdaptor: false
          vectorized: true
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Group By Operator
          aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3)
          Group By Vectorization:
              vectorOutput: false
              native: false
              projectedOutputColumns: null
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col0 (type: date)
              sort order: +
              Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col1 (type: date), _col2 (type: bigint), _col3 (type: bigint)
      Map Vectorization:
          enabled: false
          enabledConditionsNotMet: hive.vectorized.use.vector.serde.deserialize IS false
          inputFileFormats: org.apache.hadoop.mapred.SequenceFileInputFormat
      Reduce Vectorization:
          enabled: false
          enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true
          enableConditionsNotMet: hive.execution.engine mr IN [tez, spark] IS false
      Reduce Operator Tree:
        Select Operator
          expressions: KEY.reducesinkkey0 (type: date), VALUE._col0 (type: date), VALUE._col1 (type: bigint), VALUE._col2 (type: bigint)
          outputColumnNames: _col0, _col1, _col2, _col3
          Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: NONE
          File Output Operator
            compressed: false
            Statistics: Num rows: 1 Data size: 128 Basic stats: COMPLETE Column stats: NONE
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
PREHOOK: type: QUERY
PREHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
POSTHOOK: query: SELECT
  min(fl_date) AS c1,
  max(fl_date),
  count(fl_date),
  count(*)
FROM date_udf_flight_orc
ORDER BY c1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@date_udf_flight_orc
#### A masked pattern was here ####
c1	c1_1	c2	c3
2010-10-20	2010-10-31	137	137
